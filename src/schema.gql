# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Recipe {
  id: String!
  title: String
  description: String!
  ingredients: [String!]!
  methods: [String!]!
  photo: String!
  qtdLikes: Int!
  likes: [String!]!
  creatorId: String!
  creatorPhoto: String!
  creatorName: String!
  type: String!
}

type User {
  id: String!
  name: String!
  firstname: String!
  lastname: String!
  email: String!
  partner: Boolean!
  photo: String!
  bio: String
  recipesCreated: [String!]!
  recipesLiked: [String!]!
  driverRecipeCreate: Boolean!
  driverProfile: Boolean!
  getRecipes: [Recipe!]!
}

type Comment {
  id: String!
  recipeId: String!
  creatorId: String!
  creatorPhoto: String!
  creatorName: String!
  content: String!
  qtdLikes: Int
  likes: [String!]
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  getUser(email: String!): User!
  getUserById(id: String!): User!
  users: [User!]!
  recipes: [Recipe!]!
  recipe(id: String!): Recipe!
  getUserRecipes(id: String!): [Recipe!]!
  getUserFavouriteRecipes(id: String!): Recipe!
  searchRecipe(string: String!): [Recipe!]!
  searchRecipeType(type: String!): [Recipe!]!
  comments: [Comment!]!
  comment(id: String!): Comment!
  findRecipeCommentaries(id: String!): [Comment!]!
  findUserCommentaries(id: String!): [Comment!]!
}

type Mutation {
  createNewUser(createUser: CreateUser!): User!
  updateUser(updateUser: UpdatePartner!): User!
  updateBio(updateBio: UpdateBio!): User!
  updateUserInfo(updateUserInfo: UpdateUser!): User!
  updateUserPhoto(updateUserPhoto: UpdateUserPhoto!): User!
  createRecipe(createRecipeInput: CreateRecipeInput!): Recipe!
  updateRecipe(updateRecipeInput: UpdateRecipeInput!): Recipe!
  removeRecipe(id: Int!): Recipe!
  likeRecipe(likeRecipe: LikeRecipe!): Recipe!
  dislikeRecipe(dislikeRecipe: DislikeRecipe!): Recipe!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  removeComment(id: String!): Comment!
}

input CreateUser {
  name: String!
  firstname: String!
  lastname: String!
  email: String!
  photo: String
}

input UpdatePartner {
  id: String!
}

input UpdateBio {
  id: String!
  bio: String!
}

input UpdateUser {
  id: String!
  firstname: String!
  lastname: String!
  name: String!
  bio: String!
  photo: String!
}

input UpdateUserPhoto {
  id: String!
  photo: String!
}

input CreateRecipeInput {
  title: String!
  description: String!
  ingredients: [String!]!
  methods: [String!]!
  photo: String
  creatorId: String!
  creatorPhoto: String
  creatorName: String!
  type: String
}

input UpdateRecipeInput {
  title: String
  description: String
  ingredients: [String!]
  methods: [String!]
  photo: String
  creatorId: String
  creatorPhoto: String
  creatorName: String
  type: String
  id: String!
}

input LikeRecipe {
  userId: String!
  recipeId: String!
}

input DislikeRecipe {
  userId: String!
  recipeId: String!
}

input CreateCommentInput {
  recipeId: String!
  creatorId: String!
  creatorPhoto: String!
  creatorName: String!
  content: String!
  qtdLikes: Int
  likes: [String!]
}

input UpdateCommentInput {
  recipeId: String
  creatorId: String
  creatorPhoto: String
  creatorName: String
  content: String
  qtdLikes: Int
  likes: [String!]
  id: Int!
}